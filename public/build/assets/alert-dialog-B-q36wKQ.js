import{c as u,e as A,f as G,O as H,W,C as V,T as Y,D as q,d as D,b as B,P as J}from"./index-CtqNtBL0.js";import{f as K,r as s,j as o,i as v,k as Q,I as U,d as n}from"./app-C3BOZ1X1.js";import{b as y}from"./button-CPshFZPR.js";/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const xe=u("CirclePlus",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 12h8",key:"1wcyev"}],["path",{d:"M12 8v8",key:"napkw2"}]]);/**
 * @license lucide-react v0.447.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ne=u("Pencil",[["path",{d:"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",key:"1a8usu"}],["path",{d:"m15 5 4 4",key:"1mk7zo"}]]);var x="AlertDialog",[X,he]=K(x,[A]),i=A(),N=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(B,{...r,...t,modal:!0})};N.displayName=x;var Z="AlertDialogTrigger",h=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(G,{...l,...r,ref:a})});h.displayName=Z;var ee="AlertDialogPortal",R=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(J,{...r,...t})};R.displayName=ee;var ae="AlertDialogOverlay",_=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(H,{...l,...r,ref:a})});_.displayName=ae;var c="AlertDialogContent",[te,oe]=X(c),j=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),F=v(a,p),f=s.useRef(null);return o.jsx(W,{contentName:c,titleName:C,docsSlug:"alert-dialog",children:o.jsx(te,{scope:t,cancelRef:f,children:o.jsxs(V,{role:"alertdialog",...g,...l,ref:F,onOpenAutoFocus:Q(l.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=f.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(U,{children:r}),o.jsx(se,{contentRef:p})]})})})});j.displayName=c;var C="AlertDialogTitle",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(Y,{...l,...r,ref:a})});P.displayName=C;var w="AlertDialogDescription",b=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(q,{...l,...r,ref:a})});b.displayName=w;var re="AlertDialogAction",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(D,{...l,...r,ref:a})});E.displayName=re;var T="AlertDialogCancel",S=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=oe(T,t),g=i(t),p=v(a,l);return o.jsx(D,{...g,...r,ref:p})});S.displayName=T;var se=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${w}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},le=N,ie=h,ne=R,O=_,M=j,$=E,k=S,I=P,z=b;const Re=le,_e=ie,ce=ne,L=s.forwardRef(({className:e,...a},t)=>o.jsx(O,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));L.displayName=O.displayName;const de=s.forwardRef(({className:e,...a},t)=>o.jsxs(ce,{children:[o.jsx(L,{}),o.jsx(M,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));de.displayName=M.displayName;const pe=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});pe.displayName="AlertDialogHeader";const ge=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});ge.displayName="AlertDialogFooter";const fe=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:n("text-lg font-semibold",e),...a}));fe.displayName=I.displayName;const me=s.forwardRef(({className:e,...a},t)=>o.jsx(z,{ref:t,className:n("text-sm text-muted-foreground",e),...a}));me.displayName=z.displayName;const ue=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:n(y(),e),...a}));ue.displayName=$.displayName;const Ae=s.forwardRef(({className:e,...a},t)=>o.jsx(k,{ref:t,className:n(y({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));Ae.displayName=k.displayName;export{Re as A,xe as C,Ne as P,_e as a,de as b,pe as c,fe as d,me as e,ge as f,Ae as g,ue as h};
